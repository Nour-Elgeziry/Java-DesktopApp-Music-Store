/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Client;

import java.awt.print.PrinterException;
import sqlitechinookcw.Track;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import sqlitechinookcw.Genre;
import sqlitechinookcw.Parcel;

/**
 *
 * @author nour
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.JButton connectToServerButton = new javax.swing.JButton();
        statusLabel = new javax.swing.JLabel();
        viewTracksButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        dataTextArea = new javax.swing.JTextArea();
        viewGenreButton = new javax.swing.JButton();
        printButton = new javax.swing.JButton();
        addTrackButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        trackIDField = new javax.swing.JTextField();
        trackNameField = new javax.swing.JTextField();
        albumIDField = new javax.swing.JTextField();
        mediaTypeIDField = new javax.swing.JTextField();
        genreIDField = new javax.swing.JTextField();
        composerField = new javax.swing.JTextField();
        millisecondsField = new javax.swing.JTextField();
        bytesField = new javax.swing.JTextField();
        unitPriceField = new javax.swing.JTextField();
        deleteTrackButton = new javax.swing.JButton();
        addTrackButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        deleteTrackNameField = new javax.swing.JTextField();
        deleteTrackIDField = new javax.swing.JTextField();
        editUnitPriceField = new javax.swing.JTextField();
        editTrackNameField = new javax.swing.JTextField();
        editAlbumIDField = new javax.swing.JTextField();
        editMediaTypeIDField = new javax.swing.JTextField();
        editGenreIDField = new javax.swing.JTextField();
        editComposerField = new javax.swing.JTextField();
        editMillisecondsField = new javax.swing.JTextField();
        editBytesField = new javax.swing.JTextField();
        editTrackIDField = new javax.swing.JTextField();
        addGenreButton = new javax.swing.JButton();
        editGenreButton = new javax.swing.JButton();
        deleteGenreButton = new javax.swing.JButton();
        genreTextField = new javax.swing.JTextField();
        genreIdField = new javax.swing.JTextField();
        editGenreIdField = new javax.swing.JTextField();
        editGenreNameField = new javax.swing.JTextField();
        deleteGenreNameField = new javax.swing.JTextField();
        deleteGenreIdField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        connectToServerButton.setText("Connect To Server");
        connectToServerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectToServerButtonActionPerformed(evt);
            }
        });

        statusLabel.setText("Status");

        viewTracksButton.setText("View Tracks");
        viewTracksButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewTracksButtonActionPerformed(evt);
            }
        });

        dataTextArea.setColumns(20);
        dataTextArea.setRows(5);
        jScrollPane1.setViewportView(dataTextArea);

        viewGenreButton.setText("View Genre ");
        viewGenreButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewGenreButtonActionPerformed(evt);
            }
        });

        printButton.setText("Print Data");
        printButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printButtonActionPerformed(evt);
            }
        });

        addTrackButton.setText("Add Track");
        addTrackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTrackButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Manipulating Tracks");
        jLabel1.setAlignmentX(0.5F);

        trackIDField.setText("Track ID");

        trackNameField.setText("Track Name");

        albumIDField.setText("Album ID");

        mediaTypeIDField.setText("Media Type ID");

        genreIDField.setText("Genre ID");

        composerField.setText("Composer");

        millisecondsField.setText("Milliseconds");

        bytesField.setText("Bytes");

        unitPriceField.setText("Unit Price");

        deleteTrackButton.setText("Delete Track");
        deleteTrackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteTrackButtonActionPerformed(evt);
            }
        });

        addTrackButton2.setText("Edit Track");
        addTrackButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTrackButton2ActionPerformed(evt);
            }
        });

        jLabel2.setText("Using Track Name");

        jLabel3.setText("Using Track ID");

        deleteTrackIDField.setText("0");

        editUnitPriceField.setText("Unit Price");

        editTrackNameField.setText("Track Name");

        editAlbumIDField.setText("Album ID");

        editMediaTypeIDField.setText("Media Type ID");

        editGenreIDField.setText("Genre ID");

        editComposerField.setText("Composer");

        editMillisecondsField.setText("Milliseconds");

        editBytesField.setText("Bytes");

        editTrackIDField.setText("Track ID");

        addGenreButton.setText("Add Genre");
        addGenreButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addGenreButtonActionPerformed(evt);
            }
        });

        editGenreButton.setText("Edit Genre");
        editGenreButton.setActionCommand("Edit Genre");
        editGenreButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editGenreButtonActionPerformed(evt);
            }
        });

        deleteGenreButton.setText("Delete Genre");
        deleteGenreButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteGenreButtonActionPerformed(evt);
            }
        });

        genreTextField.setText("Genre Name");

        genreIdField.setText("Genre  ID");

        editGenreIdField.setText("Genre ID");

        editGenreNameField.setText("Genre Name");

        deleteGenreIdField.setText("0");

        jLabel4.setText("Using Track Name");

        jLabel5.setText("Using Track ID");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(unitPriceField, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(millisecondsField, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bytesField, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(genreIDField, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(trackIDField, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(trackNameField, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(albumIDField, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(mediaTypeIDField, javax.swing.GroupLayout.Alignment.LEADING))
                                    .addComponent(composerField, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(38, 38, 38)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(editUnitPriceField, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(editMillisecondsField, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(editBytesField, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(editGenreIDField, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(editTrackIDField, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(editTrackNameField, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(editAlbumIDField, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(editMediaTypeIDField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(editComposerField, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(addTrackButton2)))
                            .addComponent(addTrackButton))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addComponent(deleteTrackButton))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(deleteTrackNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(deleteTrackIDField, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(106, 106, 106)
                                .addComponent(addGenreButton))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(114, 114, 114)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(genreIdField)
                                    .addComponent(genreTextField))))
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(editGenreButton)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(editGenreNameField)
                                    .addComponent(editGenreIdField))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(54, 54, 54)
                                .addComponent(deleteGenreButton)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(deleteGenreNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(deleteGenreIdField, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(48, 48, 48))))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(viewTracksButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(viewGenreButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(printButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(statusLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(297, 297, 297)
                        .addComponent(connectToServerButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(174, 174, 174)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(38, 38, 38))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(connectToServerButton)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewTracksButton)
                    .addComponent(viewGenreButton))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(printButton)
                .addGap(5, 5, 5)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addTrackButton)
                    .addComponent(deleteTrackButton)
                    .addComponent(addTrackButton2)
                    .addComponent(addGenreButton)
                    .addComponent(editGenreButton)
                    .addComponent(deleteGenreButton))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(trackIDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(trackNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(albumIDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mediaTypeIDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)
                        .addComponent(genreIDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(composerField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(millisecondsField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bytesField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(unitPriceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(editTrackIDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2)
                                    .addComponent(deleteTrackNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(editTrackNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3)
                                    .addComponent(deleteTrackIDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(genreTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(editGenreNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(deleteGenreIdField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(editAlbumIDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(editMediaTypeIDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(9, 9, 9)
                                .addComponent(editGenreIDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(editComposerField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(editGenreIdField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(genreIdField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel4)
                                        .addComponent(deleteGenreNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editMillisecondsField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editBytesField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editUnitPriceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                .addComponent(statusLabel)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void connectToServerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectToServerButtonActionPerformed
        reconnectToServer();
    }//GEN-LAST:event_connectToServerButtonActionPerformed

    private void viewTracksButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewTracksButtonActionPerformed
        viewTracks();
    }//GEN-LAST:event_viewTracksButtonActionPerformed

    private void viewGenreButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewGenreButtonActionPerformed
        viewGenre();
    }//GEN-LAST:event_viewGenreButtonActionPerformed

    private void printButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printButtonActionPerformed
        try {
            boolean complete = dataTextArea.print();
            if (complete) {
                JOptionPane.showMessageDialog(null, "Done Printinig", "Information", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "Printinig", "Printer", JOptionPane.ERROR_MESSAGE);
            }

        } catch (PrinterException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_printButtonActionPerformed

    private void addTrackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTrackButtonActionPerformed
        addTrack();
    }//GEN-LAST:event_addTrackButtonActionPerformed

    private void deleteTrackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteTrackButtonActionPerformed
        deleteTrack();
    }//GEN-LAST:event_deleteTrackButtonActionPerformed

    private void addTrackButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTrackButton2ActionPerformed
        editTrack();
    }//GEN-LAST:event_addTrackButton2ActionPerformed

    private void addGenreButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addGenreButtonActionPerformed
        addGenre();
    }//GEN-LAST:event_addGenreButtonActionPerformed

    private void editGenreButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editGenreButtonActionPerformed
       editGenre();
    }//GEN-LAST:event_editGenreButtonActionPerformed

    private void deleteGenreButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteGenreButtonActionPerformed
        deleteGenre();
    }//GEN-LAST:event_deleteGenreButtonActionPerformed

    private void addTrack() {

        if ((objectOutputStream != null && objectInputStream != null)) {

            //1. Send user inputed values through track object
            int trackID = Integer.parseInt(trackIDField.getText());
            String trackName = trackNameField.getText();
            int albumID = Integer.parseInt(albumIDField.getText());
            int mediaTypeID = Integer.parseInt(mediaTypeIDField.getText());
            int genreID = Integer.parseInt(genreIDField.getText());
            String composer = composerField.getText();
            int milliseconds = Integer.parseInt(millisecondsField.getText());
            int bytes = Integer.parseInt(bytesField.getText());
            double unitPrice = Integer.parseInt(unitPriceField.getText());

            //2. send data to server
            try {
                Track track = new Track(trackID, trackName, albumID, mediaTypeID, genreID, composer, milliseconds, bytes, unitPrice);
                objectOutputStream.writeObject(new Parcel(track, null, true));
            } catch (IOException ex) {
                statusLabel.setText("IOException " + ex);
            }

        }
    }

    private void deleteTrack() {

        int trackID = Integer.parseInt(deleteTrackIDField.getText());

        if ((objectOutputStream != null && objectInputStream != null)) {

            //1. send either track Name or ID
            if (trackID != 0) {

                //2. send data to server
                try {
                    Track track = new Track(true, trackID, false);
                    objectOutputStream.writeObject(new Parcel(track, null, true));
                } catch (IOException ex) {
                    statusLabel.setText("IOException " + ex);
                }

            } else if (deleteTrackNameField.getText() != null || !"".equals(deleteTrackNameField.getText())) {

                String trackName = deleteTrackNameField.getText();

                try {
                    Track track = new Track(true, trackName, true);
                    objectOutputStream.writeObject(new Parcel(track, null, true));
                } catch (IOException ex) {
                    statusLabel.setText("IOException " + ex);
                }

            }

        }
    }

    private void editTrack() {
        if (objectOutputStream != null && objectInputStream != null) {

            int trackID = Integer.parseInt(editTrackIDField.getText());
            String trackName = editTrackNameField.getText();
            int albumID = Integer.parseInt(editAlbumIDField.getText());
            int mediaTypeID = Integer.parseInt(editMediaTypeIDField.getText());
            int genreID = Integer.parseInt(editGenreIDField.getText());
            String composer = editComposerField.getText();
            int milliseconds = Integer.parseInt(editMillisecondsField.getText());
            int bytes = Integer.parseInt(editBytesField.getText());
            double unitPrice = Integer.parseInt(editUnitPriceField.getText());

            //2. send data to server
            try {

                Track track = new Track(trackID, trackName, albumID, mediaTypeID, genreID, composer, milliseconds, bytes, unitPrice, true);
                Parcel parcel = new Parcel(track, null, true);
                parcel.getTrack().setisDelete(false);
                objectOutputStream.writeObject(new Parcel(track, null, true));
            } catch (IOException ex) {
                statusLabel.setText("IOException " + ex);
            }

        }
    }

    private void viewTracks() {
        if (objectOutputStream != null && objectInputStream != null) {

            //1. set isViewTracks to true 
            Track track = new Track(true);  // calling track using the view constructor

            ///2. send data to server
            try {
                objectOutputStream.writeObject(new Parcel(track, null, true));
            } catch (IOException ex) {
                statusLabel.setText("IOException " + ex);
            }

            //3. get reply from server
            System.out.println("in client getting reply");
            Object reply = null;
            statusLabel.setText(" waiting for reply from server");
            try {
                reply = objectInputStream.readObject();
                statusLabel.setText("recieved reply from server");
            } catch (IOException ex) {
                statusLabel.setText("IOException " + ex);
            } catch (ClassNotFoundException ex) {
                statusLabel.setText("ClassNotFoundException " + ex);
            }

            //4. display message to user
            if (reply != null) {
                System.out.println(" i am herer in client");

                dataTextArea.setText(reply.toString());
            } else {
                statusLabel.setText("You must connect to the server first!!");

            }
        }
    }

    private void viewGenre() {

        if (objectOutputStream != null && objectInputStream != null) {

            ///2. send data to server
            try {
                Genre genre = new Genre(true);
                objectOutputStream.writeObject(new Parcel(null, genre, false));
            } catch (IOException ex) {
                statusLabel.setText("IOException " + ex);
            }

            //3. get reply from server
            System.out.println("in client getting reply");
            Object reply = null;
            statusLabel.setText(" waiting for reply from server");
            try {
                reply = objectInputStream.readObject();
                statusLabel.setText("recieved reply from server");
            } catch (IOException ex) {
                statusLabel.setText("IOException " + ex);
            } catch (ClassNotFoundException ex) {
                statusLabel.setText("ClassNotFoundException " + ex);
            }

            //4. display message to user
            if (reply != null) {
                System.out.println(" i am herer in client");

                dataTextArea.setText(reply.toString());
            } else {
                statusLabel.setText("You must connect to the server first!!");

            }
        }

    }

    private void addGenre() {

        if ((objectOutputStream != null && objectInputStream != null)) {

            //1. Send user inputed values through track object
            int genreID = Integer.parseInt(genreIdField.getText());
            String genreName = genreTextField.getText();

            //2. send data to server
            try {
                Genre genre = new Genre (genreID,genreName);
                objectOutputStream.writeObject(new Parcel(null, genre, false));
            } catch (IOException ex) {
                statusLabel.setText("IOException " + ex);
            }

        }

    }
    
    
    private void editGenre(){
    
       if ((objectOutputStream != null && objectInputStream != null)) {

            //1. Send user inputed values through track object
            int genreID = Integer.parseInt(editGenreIdField.getText());
            String genreName = editGenreNameField.getText();

            //2. send data to server
            try {
                Genre genre = new Genre (genreID,genreName,true);
                objectOutputStream.writeObject(new Parcel(null, genre, false));
            } catch (IOException ex) {
                statusLabel.setText("IOException " + ex);
            }

        }
    
    }
    
      private void deleteGenre() {

        int genreId = Integer.parseInt(deleteGenreIdField.getText());

        if ((objectOutputStream != null && objectInputStream != null)) {

            //1. send either track Name or ID
            if (genreId != 0) {

                //2. send data to server
                try {
                    Genre genre = new Genre(true, genreId, false);
                    objectOutputStream.writeObject(new Parcel(null, genre, false));
                } catch (IOException ex) {
                    statusLabel.setText("IOException " + ex);
                }

            } else if (deleteGenreNameField.getText() != null || !"".equals(deleteGenreNameField.getText())) {

                String genreName = deleteGenreNameField.getText();

                try {
                    Genre genre = new Genre(true, genreName, true);
                    objectOutputStream.writeObject(new Parcel(null, genre, false));
                } catch (IOException ex) {
                    statusLabel.setText("IOException " + ex);
                }

            }

        }
    }

    private void reconnectToServer() {
        closeConnection();
        statusLabel.setText("Status: Attempting connection to server");
        try {
            socket = new Socket("127.0.0.1", 2000);

            objectOutputStream = new ObjectOutputStream(socket.getOutputStream());
            objectInputStream = new ObjectInputStream(socket.getInputStream());
            statusLabel.setText("Status: Connected to server");
        } catch (IOException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            statusLabel.setText(ex.toString()); // connection failed
        }
    }

    private void closeConnection() {
        if (socket != null) {
            statusLabel.setText("Status: closing connection");
            try {
                socket.close();
            } catch (IOException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                socket = null;
            }
        }
    }

    /* public void keepReadingFromServer() {
     while (true) {
     try {
     Track reply = (Track) objectInputStream.readObject();
     statusLabel.setText(" waiting for reply from server");
     if (reply != null) {
     dataTextArea.setText(reply.getName());
     } else {
     statusLabel.setText("You must connect to the server first!!");

     }
     } catch (IOException | ClassNotFoundException ex) {
     Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
     }
     }
     }*/
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    private Socket socket;

    private ObjectOutputStream objectOutputStream;
    private ObjectInputStream objectInputStream;


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addGenreButton;
    private javax.swing.JButton addTrackButton;
    private javax.swing.JButton addTrackButton2;
    private javax.swing.JTextField albumIDField;
    private javax.swing.JTextField bytesField;
    private javax.swing.JTextField composerField;
    private javax.swing.JTextArea dataTextArea;
    private javax.swing.JButton deleteGenreButton;
    private javax.swing.JTextField deleteGenreIdField;
    private javax.swing.JTextField deleteGenreNameField;
    private javax.swing.JButton deleteTrackButton;
    private javax.swing.JTextField deleteTrackIDField;
    private javax.swing.JTextField deleteTrackNameField;
    private javax.swing.JTextField editAlbumIDField;
    private javax.swing.JTextField editBytesField;
    private javax.swing.JTextField editComposerField;
    private javax.swing.JButton editGenreButton;
    private javax.swing.JTextField editGenreIDField;
    private javax.swing.JTextField editGenreIdField;
    private javax.swing.JTextField editGenreNameField;
    private javax.swing.JTextField editMediaTypeIDField;
    private javax.swing.JTextField editMillisecondsField;
    private javax.swing.JTextField editTrackIDField;
    private javax.swing.JTextField editTrackNameField;
    private javax.swing.JTextField editUnitPriceField;
    private javax.swing.JTextField genreIDField;
    private javax.swing.JTextField genreIdField;
    private javax.swing.JTextField genreTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField mediaTypeIDField;
    private javax.swing.JTextField millisecondsField;
    private javax.swing.JButton printButton;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JTextField trackIDField;
    private javax.swing.JTextField trackNameField;
    private javax.swing.JTextField unitPriceField;
    private javax.swing.JButton viewGenreButton;
    private javax.swing.JButton viewTracksButton;
    // End of variables declaration//GEN-END:variables
}
